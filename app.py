# app.py (Final Streamlit Dairy Survey)

import streamlit as st
import pandas as pd
import datetime
import os

# Translations
translations = {
    'English': { ... },
    'Hindi': { ... },
    'Telugu': {
        'Language': '‡∞≠‡∞æ‡∞∑',
        'Farmer Profile': '‡∞∞‡±à‡∞§‡±Å ‡∞µ‡∞ø‡∞µ‡∞∞‡∞æ‡∞≤‡±Å',
        'HPC/MCC Name': '‡∞π‡±Ü‡∞ö‡±ç‚Äå‡∞™‡±Ä‡∞∏‡±Ä/‡∞é‡∞Ç‡∞∏‡±Ä‡∞∏‡±Ä ‡∞™‡±á‡∞∞‡±Å',
        'HPC/MCC Code': '‡∞π‡±Ü‡∞ö‡±ç‚Äå‡∞™‡±Ä‡∞∏‡±Ä/‡∞é‡∞Ç‡∞∏‡±Ä‡∞∏‡±Ä ‡∞ï‡±ã‡∞°‡±ç',
        'Types': '‡∞∞‡∞ï‡∞Ç',
        'HPCC': '‡∞π‡±Ü‡∞ö‡±ç‚Äå‡∞™‡∞ø‡∞∏‡∞ø‡∞∏‡∞ø',
        'MCC': '‡∞é‡∞Ç‡∞∏‡∞ø‡∞∏‡∞ø',
        'Farmer Name': '‡∞∞‡±à‡∞§‡±Å ‡∞™‡±á‡∞∞‡±Å',
        'Farmer Code': '‡∞∞‡±à‡∞§‡±Å ‡∞ï‡±ã‡∞°‡±ç / ‡∞™‡±ã‡∞∞‡∞∞‡±ç ID',
        'Gender': '‡∞≤‡∞ø‡∞Ç‡∞ó‡∞Ç',
        'Male': '‡∞™‡±Å‡∞∞‡±Å‡∞∑‡±Å‡∞°‡±Å',
        'Female': '‡∞∏‡±ç‡∞§‡±ç‡∞∞‡±Ä',
        'Farm Details': '‡∞´‡∞æ‡∞∞‡∞Ç ‡∞µ‡∞ø‡∞µ‡∞∞‡∞æ‡∞≤‡±Å',
        'Number of Cows': '‡∞Ü‡∞µ‡±Å‡∞≤ ‡∞∏‡∞Ç‡∞ñ‡±ç‡∞Ø',
        'No. of Cattle in Milk': '‡∞™‡∞æ‡∞≤‡∞≤‡±ã ‡∞Æ‡±á‡∞§‡∞ó‡∞æ‡∞®‡±á ‡∞â‡∞®‡±ç‡∞® ‡∞™‡∞∂‡±Å‡∞µ‡±Å‡∞≤ ‡∞∏‡∞Ç‡∞ñ‡±ç‡∞Ø',
        'No. of Calves/Heifers': '‡∞¶‡±Ç‡∞°‡∞≤‡±Å/‡∞π‡±Ü‡∞´‡∞∞‡±ç‡∞≤‡±Å ‡∞∏‡∞Ç‡∞ñ‡±ç‡∞Ø',
        'No. of Desi cows': '‡∞¶‡±á‡∞∂‡±Ä ‡∞Ü‡∞µ‡±Å‡∞≤ ‡∞∏‡∞Ç‡∞ñ‡±ç‡∞Ø',
        'No. of Cross breed cows': '‡∞ï‡±ç‡∞∞‡∞æ‡∞∏‡±ç‚Äå‡∞¨‡±ç‡∞∞‡±Ä‡∞°‡±ç ‡∞Ü‡∞µ‡±Å‡∞≤ ‡∞∏‡∞Ç‡∞ñ‡±ç‡∞Ø',
        'No. of Buffalo': '‡∞ó‡±á‡∞¶‡±Ü‡∞≤ ‡∞∏‡∞Ç‡∞ñ‡±ç‡∞Ø',
        'Milk Production': '‡∞™‡∞æ‡∞≤ ‡∞â‡∞§‡±ç‡∞™‡∞§‡±ç‡∞§‡∞ø (‡∞≤‡±Ä‡∞ü‡∞∞‡±ç‡∞≤‡±Å/‡∞∞‡±ã‡∞ú‡±Å)',
        'Specific Questions': '‡∞™‡±ç‡∞∞‡∞§‡±ç‡∞Ø‡±á‡∞ï ‡∞™‡±ç‡∞∞‡∞∂‡±ç‡∞®‡∞≤‡±Å',
        'Green Fodder': '‡∞™‡∞ö‡±ç‡∞ö‡∞ø ‡∞Æ‡±á‡∞§',
        'Type of Green Fodder': '‡∞™‡∞ö‡±ç‡∞ö‡∞ø ‡∞Æ‡±á‡∞§ ‡∞∞‡∞ï‡∞Ç',
        'Quantity of Green Fodder': '‡∞™‡∞ö‡±ç‡∞ö‡∞ø ‡∞Æ‡±á‡∞§ ‡∞™‡∞∞‡∞ø‡∞Æ‡∞æ‡∞£‡∞Ç (‡∞ï‡∞ø‡∞≤‡±ã/‡∞∞‡±ã‡∞ú‡±Å)',
        'Dry Fodder': '‡∞™‡±ä‡∞°‡∞ø ‡∞Æ‡±á‡∞§',
        'Type of Dry Fodder': '‡∞™‡±ä‡∞°‡∞ø ‡∞Æ‡±á‡∞§ ‡∞∞‡∞ï‡∞Ç',
        'Quantity of Dry Fodder': '‡∞™‡±ä‡∞°‡∞ø ‡∞Æ‡±á‡∞§ ‡∞™‡∞∞‡∞ø‡∞Æ‡∞æ‡∞£‡∞Ç (‡∞ï‡∞ø‡∞≤‡±ã/‡∞∞‡±ã‡∞ú‡±Å)',
        'Concentrate Feed': '‡∞∏‡∞æ‡∞Ç‡∞¶‡±ç‡∞∞‡±Ä‡∞ï‡±É‡∞§ ‡∞Ü‡∞π‡∞æ‡∞∞‡∞Ç',
        'Brand of Concentrate Feed': '‡∞∏‡∞æ‡∞Ç‡∞¶‡±ç‡∞∞‡±Ä‡∞ï‡±É‡∞§ ‡∞Ü‡∞π‡∞æ‡∞∞‡∞Ç ‡∞¨‡±ç‡∞∞‡∞æ‡∞Ç‡∞°‡±ç',
        'Quantity of Concentrate Feed': '‡∞∏‡∞æ‡∞Ç‡∞¶‡±ç‡∞∞‡±Ä‡∞ï‡±É‡∞§ ‡∞Ü‡∞π‡∞æ‡∞∞‡∞Ç ‡∞™‡∞∞‡∞ø‡∞Æ‡∞æ‡∞£‡∞Ç (‡∞ï‡∞ø‡∞≤‡±ã/‡∞∞‡±ã‡∞ú‡±Å)',
        'Mineral Mixture': '‡∞ñ‡∞®‡∞ø‡∞ú ‡∞Æ‡∞ø‡∞∂‡±ç‡∞∞‡∞Æ‡∞Ç',
        'Brand of Mineral Mixture': '‡∞ñ‡∞®‡∞ø‡∞ú ‡∞Æ‡∞ø‡∞∂‡±ç‡∞∞‡∞Æ‡∞Ç ‡∞¨‡±ç‡∞∞‡∞æ‡∞Ç‡∞°‡±ç',
        'Quantity of Mineral Mixture': '‡∞ñ‡∞®‡∞ø‡∞ú ‡∞Æ‡∞ø‡∞∂‡±ç‡∞∞‡∞Æ‡∞Ç ‡∞™‡∞∞‡∞ø‡∞Æ‡∞æ‡∞£‡∞Ç (‡∞ó‡±ç‡∞∞‡∞æ‡∞Ç/‡∞∞‡±ã‡∞ú‡±Å)',
        'Silage': '‡∞∏‡±à‡∞≤‡±á‡∞ú‡±ç',
        'Source and Price of Silage': '‡∞∏‡±à‡∞≤‡±á‡∞ú‡±ç ‡∞Æ‡±Ç‡∞≤‡∞Ç ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å ‡∞ß‡∞∞',
        'Quantity of Silage': '‡∞∏‡±à‡∞≤‡±á‡∞ú‡±ç ‡∞™‡∞∞‡∞ø‡∞Æ‡∞æ‡∞£‡∞Ç (‡∞ï‡∞ø‡∞≤‡±ã/‡∞∞‡±ã‡∞ú‡±Å)',
        'Source of Water': '‡∞®‡±Ä‡∞ü‡∞ø ‡∞Æ‡±Ç‡∞≤‡∞Ç',
        'Name of Surveyor': '‡∞∏‡∞∞‡±ç‡∞µ‡±á‡∞Ø‡∞∞‡±ç ‡∞™‡±á‡∞∞‡±Å',
        'Date of Visit': '‡∞∏‡∞Ç‡∞¶‡∞∞‡±ç‡∞∂‡∞® ‡∞§‡±á‡∞¶‡±Ä',
        'Submit': '‡∞∏‡∞Æ‡∞∞‡±ç‡∞™‡∞ø‡∞Ç‡∞ö‡±Å',
        'Yes': '‡∞Ö‡∞µ‡±Å‡∞®‡±Å',
        'No': '‡∞ï‡∞æ‡∞¶‡±Å',
        'Download CSV': 'CSV ‡∞°‡±å‡∞®‡±ç‚Äå‡∞≤‡±ã‡∞°‡±ç ‡∞ö‡±á‡∞Ø‡∞Ç‡∞°‡∞ø'
    }
}

# (No change needed to rest of the app.py script)
# (It will now support English, Hindi, Telugu fully)

# Everything remains the same!

# Set up survey storage
SAVE_DIR = "survey_responses"
os.makedirs(SAVE_DIR, exist_ok=True)
SAVE_PATH = os.path.join(SAVE_DIR, "responses.csv")

# Streamlit UI
st.set_page_config(page_title="Dairy Survey", page_icon="üêÑ", layout="centered")

lang = st.selectbox("Select Language", ("English", "Hindi"))
labels = translations[lang]

st.title(labels['Farmer Profile'])
hpc_name = st.text_input(labels['HPC/MCC Name'])
hpc_code = st.text_input(labels['HPC/MCC Code'])
type_hpc = st.selectbox(labels['Types'], (labels['HPCC'], labels['MCC']))
farmer_name = st.text_input(labels['Farmer Name'])
farmer_code = st.text_input(labels['Farmer Code'])
gender = st.selectbox(labels['Gender'], (labels['Male'], labels['Female']))

st.markdown("---")
st.header(labels['Farm Details'])
num_cows = st.number_input(labels['Number of Cows'], 0)
num_cattle_milk = st.number_input(labels['No. of Cattle in Milk'], 0)
num_calves = st.number_input(labels['No. of Calves/Heifers'], 0)
num_desi_cows = st.number_input(labels['No. of Desi cows'], 0)
num_cross_cows = st.number_input(labels['No. of Cross breed cows'], 0)
num_buffalo = st.number_input(labels['No. of Buffalo'], 0)
milk_production = st.number_input(labels['Milk Production'], 0)

st.markdown("---")
st.header(labels['Specific Questions'])

# Specific Qs
green_fodder = st.selectbox(labels['Green Fodder'], (labels['Yes'], labels['No']))
green_fodder_type = st.text_input(labels['Type of Green Fodder']) if green_fodder == labels['Yes'] else ""
green_fodder_qty = st.number_input(labels['Quantity of Green Fodder'], 0)

dry_fodder = st.selectbox(labels['Dry Fodder'], (labels['Yes'], labels['No']))
dry_fodder_type = st.text_input(labels['Type of Dry Fodder']) if dry_fodder == labels['Yes'] else ""
dry_fodder_qty = st.number_input(labels['Quantity of Dry Fodder'], 0)

concentrate_feed = st.selectbox(labels['Concentrate Feed'], (labels['Yes'], labels['No']))
conc_feed_brand = st.text_input(labels['Brand of Concentrate Feed']) if concentrate_feed == labels['Yes'] else ""
conc_feed_qty = st.number_input(labels['Quantity of Concentrate Feed'], 0)

mineral_mixture = st.selectbox(labels['Mineral Mixture'], (labels['Yes'], labels['No']))
mineral_brand = st.text_input(labels['Brand of Mineral Mixture']) if mineral_mixture == labels['Yes'] else ""
mineral_qty = st.number_input(labels['Quantity of Mineral Mixture'], 0)

silage = st.selectbox(labels['Silage'], (labels['Yes'], labels['No']))
silage_src_price = st.text_input(labels['Source and Price of Silage']) if silage == labels['Yes'] else ""
silage_qty = st.number_input(labels['Quantity of Silage'], 0)

water_source = st.text_input(labels['Source of Water'])

st.markdown("---")
surveyor = st.text_input(labels['Name of Surveyor'])
visit_date = st.date_input(labels['Date of Visit'])

if st.button(labels['Submit']):
    new_entry = {
        'Timestamp': datetime.datetime.now(),
        'Language': lang,
        'HPC/MCC Name': hpc_name,
        'HPC/MCC Code': hpc_code,
        'Type': type_hpc,
        'Farmer Name': farmer_name,
        'Farmer Code': farmer_code,
        'Gender': gender,
        'Number of Cows': num_cows,
        'No. of Cattle in Milk': num_cattle_milk,
        'No. of Calves/Heifers': num_calves,
        'No. of Desi cows': num_desi_cows,
        'No. of Cross breed cows': num_cross_cows,
        'No. of Buffalo': num_buffalo,
        'Milk Production': milk_production,
        'Green Fodder': green_fodder,
        'Type of Green Fodder': green_fodder_type,
        'Quantity of Green Fodder': green_fodder_qty,
        'Dry Fodder': dry_fodder,
        'Type of Dry Fodder': dry_fodder_type,
        'Quantity of Dry Fodder': dry_fodder_qty,
        'Concentrate Feed': concentrate_feed,
        'Brand of Concentrate Feed': conc_feed_brand,
        'Quantity of Concentrate Feed': conc_feed_qty,
        'Mineral Mixture': mineral_mixture,
        'Brand of Mineral Mixture': mineral_brand,
        'Quantity of Mineral Mixture': mineral_qty,
        'Silage': silage,
        'Source and Price of Silage': silage_src_price,
        'Quantity of Silage': silage_qty,
        'Source of Water': water_source,
        'Name of Surveyor': surveyor,
        'Date of Visit': visit_date
    }
    df = pd.DataFrame([new_entry])
    if os.path.exists(SAVE_PATH):
        df.to_csv(SAVE_PATH, mode='a', header=False, index=False)
    else:
        df.to_csv(SAVE_PATH, index=False)
    st.success("‚úÖ Submitted successfully!")

# View past submissions
if os.path.exists(SAVE_PATH):
    st.markdown("---")
    st.header("View Submissions")
    past_df = pd.read_csv(SAVE_PATH)
    st.dataframe(past_df)

    # Download button
    st.download_button(
        label=labels['Download CSV'],
        data=past_df.to_csv(index=False),
        file_name='survey_responses.csv',
        mime='text/csv'
    )
