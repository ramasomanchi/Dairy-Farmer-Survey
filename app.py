# app.py

import streamlit as st
import pandas as pd
import os
import datetime

# -------------------------
# Translation dictionary
# -------------------------
translations = {
    'English': {
        'Farmer Name': 'Farmer Name',
        'Farmer Code': 'Farmer Code',
        'Gender': 'Gender',
        'Select Gender': 'Select Gender',
        'Male': 'Male',
        'Female': 'Female',
        'HPC/MCC Name': 'HPC/MCC Name',
        'HPC/MCC Code': 'HPC/MCC Code',
        'Type': 'Type',
        'Select Type': 'Select Type',
        'HPCC': 'HPCC',
        'MCC': 'MCC',
        'Number of Cows': 'Number of Cows',
        'No. of Cattle in Milk': 'No. of Cattle in Milk',
        'No. of Calves/Heifers': 'No. of Calves/Heifers',
        'No. of Desi Cows': 'No. of Desi Cows',
        'No. of Crossbreed Cows': 'No. of Crossbreed Cows',
        'No. of Buffalo': 'No. of Buffalo',
        'Milk Production (liters/day)': 'Milk Production (liters/day)',
        'Source of Water': 'Source of Water',
        'Submit': 'Submit',
    },
    'Hindi': {
        'Farmer Name': '‡§ï‡§ø‡§∏‡§æ‡§® ‡§ï‡§æ ‡§®‡§æ‡§Æ',
        'Farmer Code': '‡§ï‡§ø‡§∏‡§æ‡§® ‡§ï‡•ã‡§°',
        'Gender': '‡§≤‡§ø‡§Ç‡§ó',
        'Select Gender': '‡§≤‡§ø‡§Ç‡§ó ‡§ö‡•Å‡§®‡•á‡§Ç',
        'Male': '‡§™‡•Å‡§∞‡•Å‡§∑',
        'Female': '‡§Æ‡§π‡§ø‡§≤‡§æ',
        'HPC/MCC Name': '‡§è‡§ö‡§™‡•Ä‡§∏‡•Ä/‡§è‡§Æ‡§∏‡•Ä‡§∏‡•Ä ‡§®‡§æ‡§Æ',
        'HPC/MCC Code': '‡§è‡§ö‡§™‡•Ä‡§∏‡•Ä/‡§è‡§Æ‡§∏‡•Ä‡§∏‡•Ä ‡§ï‡•ã‡§°',
        'Type': '‡§™‡•ç‡§∞‡§ï‡§æ‡§∞',
        'Select Type': '‡§™‡•ç‡§∞‡§ï‡§æ‡§∞ ‡§ö‡•Å‡§®‡•á‡§Ç',
        'HPCC': '‡§è‡§ö‡§™‡•Ä‡§∏‡•Ä‡§∏‡•Ä',
        'MCC': '‡§è‡§Æ‡§∏‡•Ä‡§∏‡•Ä',
        'Number of Cows': '‡§ó‡§æ‡§Ø‡•ã‡§Ç ‡§ï‡•Ä ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ',
        'No. of Cattle in Milk': '‡§¶‡•Ç‡§ß ‡§µ‡§æ‡§≤‡•Ä ‡§ó‡§æ‡§Ø‡•ã‡§Ç ‡§ï‡•Ä ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ',
        'No. of Calves/Heifers': '‡§¨‡§õ‡§°‡§º‡•ã‡§Ç/‡§π‡§ø‡§´‡§∞‡•ç‡§∏ ‡§ï‡•Ä ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ',
        'No. of Desi Cows': '‡§¶‡•á‡§∏‡•Ä ‡§ó‡§æ‡§Ø‡•ã‡§Ç ‡§ï‡•Ä ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ',
        'No. of Crossbreed Cows': '‡§ï‡•ç‡§∞‡•â‡§∏‡§¨‡•ç‡§∞‡•Ä‡§° ‡§ó‡§æ‡§Ø‡•ã‡§Ç ‡§ï‡•Ä ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ',
        'No. of Buffalo': '‡§≠‡•à‡§Ç‡§∏‡•ã‡§Ç ‡§ï‡•Ä ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ',
        'Milk Production (liters/day)': '‡§¶‡•Ç‡§ß ‡§â‡§§‡•ç‡§™‡§æ‡§¶‡§® (‡§≤‡•Ä‡§ü‡§∞/‡§¶‡§ø‡§®)',
        'Source of Water': '‡§™‡§æ‡§®‡•Ä ‡§ï‡§æ ‡§∏‡•ç‡§∞‡•ã‡§§',
        'Submit': '‡§ú‡§Æ‡§æ ‡§ï‡§∞‡•á‡§Ç',
    },
    'Telugu': {
        'Farmer Name': '‡∞∞‡±à‡∞§‡±Å ‡∞™‡±á‡∞∞‡±Å',
        'Farmer Code': '‡∞∞‡±à‡∞§‡±Å ‡∞ï‡±ã‡∞°‡±ç',
        'Gender': '‡∞≤‡∞ø‡∞Ç‡∞ó‡∞Ç',
        'Select Gender': '‡∞≤‡∞ø‡∞Ç‡∞ó‡∞Ç ‡∞ö‡∞Ø‡∞Ç‡∞¶‡∞ø‡∞Ç‡∞ö‡∞Ç‡∞°‡∞ø',
        'Male': '‡∞™‡±Å‡∞∞‡±Å‡∞∑‡±Å‡∞°‡±Å',
        'Female': '‡∞∏‡±ç‡∞§‡±ç‡∞∞‡±Ä',
        'HPC/MCC Name': '‡∞π‡±ç‡∞™‡∞ø‡∞∏‡±Ä/‡∞é‡∞Ç‡∞∏‡±Ä‡∞∏‡±Ä ‡∞™‡±á‡∞∞‡±Å',
        'HPC/MCC Code': '‡∞π‡±ç‡∞™‡∞ø‡∞∏‡±Ä/‡∞é‡∞Ç‡∞∏‡±Ä‡∞∏‡±Ä ‡∞ï‡±ã‡∞°‡±ç',
        'Type': '‡∞™‡±ç‡∞∞‡∞ï‡∞æ‡∞∞‡∞Ç',
        'Select Type': '‡∞™‡±ç‡∞∞‡∞ï‡∞æ‡∞∞‡∞Ç ‡∞ö‡∞Ø‡∞Ç‡∞¶‡∞ø‡∞Ç‡∞ö‡∞Ç‡∞°‡∞ø',
        'HPCC': 'HPCC',
        'MCC': 'MCC',
        'Number of Cows': '‡∞Ö‡∞µ‡±Å‡∞≤ ‡∞∏‡∞Ç‡∞ñ‡±ç‡∞Ø',
        'No. of Cattle in Milk': '‡∞™‡∞æ‡∞≤‡±Å ‡∞≤‡±ã ‡∞â‡∞®‡±ç‡∞®‡∞§‡∞æ ‡∞ú‡∞®‡∞æ‡∞≤‡±Å',
        'No. of Calves/Heifers': '‡∞ï‡∞æ‡∞∞‡±Å‡∞≤‡±Å/‡∞π‡±à‡∞´‡∞∞‡±ç‡∞∏‡±ç ‡∞∏‡∞Ç‡∞ñ‡±ç‡∞Ø',
        'No. of Desi Cows': '‡∞¶‡±á‡∞∏‡∞ø ‡∞Ö‡∞µ‡±Å‡∞≤ ‡∞∏‡∞Ç‡∞ñ‡±ç‡∞Ø',
        'No. of Crossbreed Cows': '‡∞ï‡±ç‡∞∞‡∞æ‡∞∏‡±ç‡∞¨‡±ç‡∞∞‡±Ä‡∞°‡±ç ‡∞Ö‡∞µ‡±Å‡∞≤ ‡∞∏‡∞Ç‡∞ñ‡±ç‡∞Ø',
        'No. of Buffalo': '‡∞Æ‡±á‡∞≤‡∞ï‡±Å‡∞≤ ‡∞∏‡∞Ç‡∞ñ‡±ç‡∞Ø',
        'Milk Production (liters/day)': '‡∞™‡∞æ‡∞≤‡±Å ‡∞â‡∞§‡±ç‡∞™‡∞æ‡∞¶‡∞®‡∞Ç (‡∞≤‡±Ä‡∞ü‡∞∞‡±ç‡∞≤‡±Å/‡∞∞‡±ã‡∞ú‡±Å)',
        'Source of Water': '‡∞®‡±Ä‡∞ü‡∞ø ‡∞§‡±ä‡∞ü‡±ç‡∞ü‡∞ø',
        'Submit': '‡∞∏‡∞Æ‡∞∞‡±ç‡∞™‡∞ø‡∞Ç‡∞ö‡∞Ç‡∞°‡∞ø',
    }
}

# -------------------------
# Streamlit App
# -------------------------
st.set_page_config(page_title="Dairy Survey Form", page_icon="üêÆ", layout="centered")

st.title("üêÆ Dairy Farmer Survey")

lang = st.selectbox("Select Language", list(translations.keys()))
labels = translations.get(lang)

# Form
with st.form("survey_form"):
    farmer_name = st.text_input(labels['Farmer Name'])
    farmer_code = st.text_input(labels['Farmer Code'])
    gender = st.selectbox(labels['Gender'], [labels['Male'], labels['Female']])
    hpc_name = st.text_input(labels['HPC/MCC Name'])
    hpc_code = st.text_input(labels['HPC/MCC Code'])
    farmer_type = st.selectbox(labels['Type'], [labels['HPCC'], labels['MCC']])
    cows = st.number_input(labels['Number of Cows'], min_value=0)
    cattle_milk = st.number_input(labels['No. of Cattle in Milk'], min_value=0)
    calves = st.number_input(labels['No. of Calves/Heifers'], min_value=0)
    desi_cows = st.number_input(labels['No. of Desi Cows'], min_value=0)
    crossbreed_cows = st.number_input(labels['No. of Crossbreed Cows'], min_value=0)
    buffaloes = st.number_input(labels['No. of Buffalo'], min_value=0)
    milk_production = st.number_input(labels['Milk Production (liters/day)'], min_value=0)
    water_source = st.text_input(labels['Source of Water'])

    submit = st.form_submit_button(labels['Submit'])

# Save Submission
if submit:
    if not os.path.exists("survey_responses"):
        os.makedirs("survey_responses")

    new_data = {
        'Timestamp': datetime.datetime.now().isoformat(),
        'Language': lang,
        'Farmer Name': farmer_name,
        'Farmer Code': farmer_code,
        'Gender': gender,
        'HPC/MCC Name': hpc_name,
        'HPC/MCC Code': hpc_code,
        'Type': farmer_type,
        'Number of Cows': cows,
        'No. of Cattle in Milk': cattle_milk,
        'No. of Calves/Heifers': calves,
        'No. of Desi Cows': desi_cows,
        'No. of Crossbreed Cows': crossbreed_cows,
        'No. of Buffalo': buffaloes,
        'Milk Production (liters/day)': milk_production,
        'Source of Water': water_source
    }

    df = pd.DataFrame([new_data])

    csv_path = "survey_responses/responses.csv"
    if os.path.exists(csv_path):
        df.to_csv(csv_path, mode='a', index=False, header=False)
    else:
        df.to_csv(csv_path, index=False)

    st.success("‚úÖ Survey response saved successfully!")

# View and Download past submissions
if os.path.exists("survey_responses/responses.csv"):
    st.subheader("üìÖ Past Submissions")
    data = pd.read_csv("survey_responses/responses.csv")
    st.dataframe(data)

    csv = data.to_csv(index=False).encode('utf-8')
    st.download_button(
        label="üîñ Download All Submissions",
        data=csv,
        file_name='survey_submissions.csv',
        mime='text/csv'
    )
